record(bo, "$(P)DISABLE") 
{
    field(DESC, "Disable comms")
    field(PINI, "YES")
    field(VAL, "$(DISABLE=0)")
    field(OMSL, "supervisory")
    field(ZNAM, "COMMS ENABLED")
    field(ONAM, "COMMS DISABLED")
}


record(ai, "$(P):IS300"){
    field(VAL, 1)
}

record(mbbi, "$(P):UNITS_RB") 
{
    field(DESC, "Units readback")
    field(SCAN, "1 second")
    field(DTYP, "stream")
    field(INP,  "@devTPGx00.proto getUnits $(PORT)")
    field(ZRST, "mbar")
    field(ZRVL, "1")
    field(ONST, "Torr")
    field(ONVL, "2")
    field(TWST, "Pa")
    field(TWVL, "3")
    field(SIML, "$(P):SIM")
    field(SIOL, "$(P):SIM:UNITS")
    field(SDIS, "$(P):DISABLE")
    info(INTEREST, "HIGH")
}


record(mbbo, "$(P):UNITS_SP") 
{
    field(DESC, "Units setpoint")
    field(SCAN, "Passive")
    field(DTYP, "stream")
    field(OUT,  "@devTPGx00.proto setUnits $(PORT)")
    field(ZRST, "mbar")
    field(ZRVL, "1")
    field(ONST, "Torr")
    field(ONVL, "2")
    field(TWST, "Pa")
    field(TWVL, "3")
    field(FLNK, "$(P):UNITS")
    field(SIML, "$(P):SIM")
    field(SIOL, "$(P):SIM:UNITS:SP")
    field(SDIS, "$(P):DISABLE")
}

record(mbbi, "$(P):ERROR")
{
    field(DESC, "Reading the device error status")
    field(DTYP, "stream")
    field(SCAN, "1 second")
    field(INP, "@devTPGx00.proto getErrorStatus $(PORT)")
    field(ZRST, "No error")
    field(ZRVL, "0")
    field(ONST, "Device error")
    field(ONVL, "8")
    field(ONSV, "MAJOR")
    field(TWST, "No hardware")
    field(TWVL, "4")
    field(TWSV, "INVALID")
    field(THST, "Invalid parameter")
    field(THVL, "2")
    field(THSV, "MINOR")
    field(FRST, "Syntax error")
    field(FRVL, "1")
    field(FRSV, "MINOR")
    field(SIML, "$(P):SIM")
    field(SIOL, "$(P):SIM:ERROR")
    field(SDIS, "$(P):DISABLE")
    info(INTEREST, "HIGH")
}

record(mbbo, "$(P):FUNCTION")
{
    field(DESC, "Switching function selection")
    field(SCAN, "Passive")
    field(DTYP, "Raw Soft Channel")
    field(VAL, "1")
    field(ZRST, "1")
    field(ZRVL, "1")
    field(ONST, "2")
    field(ONVL, "2")
    field(TWST, "3")
    field(TWVL, "3")
    field(THST, "4")
    field(THVL, "4")
    field(FRST, "A")
    field(FRVL, "5")
    field(FVST, "B")
    field(FVVL, "6")
    field(FLNK, "$(P):FUNCTION:VALID.PROC")
    field(UNSV, "INVALID")
}

# These records are used to prevent sending invalid commands to the TPG500 (as it does not accept switching functions A and B as 
# input parameters for the function 'SPx').
record(calc, "$(P):FUNCTION:VALID")
{
    field(DESC, "Check FUNCTION value validity")
    field(SCAN, "Passive")
    field(INPA, "$(P):FUNCTION.VAL")
    field(CALC, "A<=6")
    field(FLNK, "$(P):FUNCTION:SEL:RB:RAW")
    field(ASG, "READONLY")
}

record(calcout, "$(P):FUNCTION:SEL:RB:RAW")
{
    field(DESC, "Control sending SF get command")
    field(SCAN, "1 second")
    field(INPA, "$(P):FUNCTION:VALID")
    field(CALC, "A")
    field(OOPT, "When Non-zero")
    field(OUT, "$(P):FUNCTION:SEL:RB.PROC")
}

record(calcout, "$(P):FUNCTION:ASSIGN:SP:OUT:RAW") 
{
    field(DESC, "Control sending SF set command")
    field(SCAN, "Passive")
    field(INPA, "$(P):FUNCTION:VALID")
    field(CALC, "A")
    field(OOPT, "When Non-zero")
    field(OUT, "$(P):FUNCTION:ASSIGN:SP:OUT.PROC")
}

record(stringin, "$(P):FUNCTION:SEL:RB")
{
    field(DESC, "Selected function readback")
    field(DTYP, "stream")
    field(SCAN, "Passive")
    field(PINI, "YES")
    field(INP, "@devTPG300.proto getFunctionMacro($(P):FUNCTION.VAL,$(P):FUNCTION:SEL) $(PORT)")
    
}

record(ao, "$(P):FUNCTION:LOW:SP")
{
    field(DESC, "Setpoint for low threshold")
    field(SCAN, "Passive")
    field(PREC, "11")
    field(DRVL, "0.00000000001")
    field(DRVH, "9900")
}

record(ao, "$(P):FUNCTION:HIGH:SP")
{
    field(DESC, "Setpoint for high threshold")
    field(SCAN, "Passive")
    field(PREC, "11")
    field(DRVL, "0.00000000001")
    field(DRVH, "9900")
}

record(mbbo, "$(P):FUNCTION:ASSIGN:SP")
{
    field(DESC, "Setpoint for circuit assignment")
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
    field(ZRST, "No assignment")
    field(ONST, "A1")
    field(TWST, "A2")
    field(THST, "B1")
    field(FRST, "B1")
    field(FVST, "A1 self-monitor")
    field(SXST, "A2 self-monitor")
    field(SVST, "B1 self-monitor")
    field(EIST, "B1 self-monitor")
    field(OUT, "$(P):FUNCTION:ASSIGN")
}

record(longin, "$(P):FUNCTION:ASSIGN")
{
    field(SCAN, "Passive")
}
alias("$(P):FUNCTION:ASSIGN", "$(P):FUNCTION:ASSIGN:SP:RBV")

record(stringout, "$(P):FUNCTION:ASSIGN:SP:OUT") 
{
    field(DESC, "Sends new settings")
    field(SCAN, "Passive")
    field(DTYP, "stream")
    field(OUT,  "@devTPGx00.proto setFunction($(P):FUNCTION,:LOW:SP,:HIGH:SP,:ASSIGN) $(PORT)")
    
}

record(stringin, "$(P):FUNCTION:STATUS:RB")
{
    field(DESC, "Reading all functions' status")
    field(DTYP, "stream")
    field(SCAN, "1 second")
    field(INP, "@devTPGx00.proto getFunctionsStatus($(P):FUNCTION:STATUS) $(PORT)")
    field(PINI, "YES")
    
}
